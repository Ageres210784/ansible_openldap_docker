---
- name: OPENLDAP | Add user | Ensure ou=users,{{ ldap_root }}
  community.general.ldap_entry:
    server_uri: "ldap://localhost:{{ ldap_port }}"
    bind_dn: "cn={{ ldap_admin_username }},{{ ldap_root }}"
    bind_pw: "{{ ldap_admin_password }}"
    dn: "ou=users,{{ ldap_root }}"
    objectClass:
       - organizationalUnit

- name: OPENLDAP | Add user | Set uid for user
  ansible.builtin.set_fact:
    user_id: "{%if user.uid is defined%}{{ user.uid }}{%else%}{{ (user.firstName[0] + '.' + user.lastName) | lower }}{%endif%}"
  tags: always

- name: OPENLDAP | Add user | List of all users' uidNumbers
  community.general.ldap_search:
    server_uri: "ldap://localhost:{{ ldap_port }}"
    bind_dn: "cn={{ ldap_admin_username }},{{ ldap_root }}"
    bind_pw: "{{ ldap_admin_password }}"
    dn: "ou=users,{{ ldap_root }}"
    scope: "subordinate"
    attrs:
      - "uidNumber"
  register: uidNumbers_list

# need install to a controller `pip install jmespath`
- name: OPENLDAP | Add user | Calculate the last uidNumber
  ansible.builtin.set_fact:
    uidNumber: "{{ uidNumbers_list | community.general.json_query ('results[*].uidNumber') | max | default (10000) | int + 1 }}"

- name: OPENLDAP | Add user | Create user uid={{ user_id }},ou=users,{{ ldap_root }}
  community.general.ldap_entry:
    server_uri: "ldap://localhost:{{ ldap_port }}"
    bind_dn: "cn={{ ldap_admin_username }},{{ ldap_root }}"
    bind_pw: "{{ ldap_admin_password }}"
    dn: "uid={{ user_id }},ou=users,{{ ldap_root }}"
    objectClass:
      - inetOrgPerson
      - posixAccount
      - shadowAccount
      - ldapPublicKey
    attributes:
      sn: "{{ user.lastName }}"
      givenName: "{{ user.firstName }}"
      cn: "{{ user.firstName }} {{ user.lastName }}"
      displayName: "{{ user.firstName }} {{ user.lastName }}"
      uidNumber: "{{ uidNumber }}"
      gidNumber: "{{ uidNumber }}"
      homeDirectory: "/home/{{ user_id }}"
      loginShell: /bin/bash
    state: present

- name: OPENLDAP | Add user | Create group for user {{ user_id }}
  include_tasks: add_group.yml
  with_items:
    - name: "{{ user_id }}"
      description: "Main group for user {{ user_id }}"
      gidNumber: "{{ uidNumber }}"
  loop_control:
    loop_var: group

- name: OPENLDAP | Add user | Change attributes for user uid={{ user_id }},ou=users,{{ ldap_root }}
  community.general.ldap_attrs:
    server_uri: "ldap://localhost:{{ ldap_port }}"
    bind_dn: "cn={{ ldap_admin_username }},{{ ldap_root }}"
    bind_pw: "{{ ldap_admin_password }}"
    dn: "uid={{ user_id }},ou=users,{{ ldap_root }}"
    attributes: "{{ user.attributes }}"
    state: "exact"
  when: user.attributes is defined
  tags: change_user_attributes

- name: OPENLDAP | Add user | Change password for user uid={{ user_id }},ou=users,{{ ldap_root }}
  community.general.ldap_passwd:
    server_uri: "ldap://localhost:{{ ldap_port }}"
    bind_dn: "cn={{ ldap_admin_username }},{{ ldap_root }}"
    bind_pw: "{{ ldap_admin_password }}"
    dn: "uid={{ user_id }},ou=users,{{ ldap_root }}"
    passwd: "{{ user.password }}"
  when: user.password is defined
  tags: change_user_password
