---
ldap_image: "bitnami/openldap"
ldap_version: "2.6"
ldap_hostname: ldap.example.com
ldap_root: "dc={{ ldap_root_dc }},dc=com"
ldap_root_dc: "example"
ldap_organisation: "example.com"
ldap_admin_username: admin
ldap_admin_password: adminpassword
ldap_data: /tmp/openldap/data
ldap_interface: "0.0.0.0"
ldap_port: "1389"
ldaps_port: "1636"
ldap_readonly_username: reader
ldap_readonly_password: readonlypassword
ldap_readonly_passwordHash: "{SSHA}yEeiIT8/0ucEW+TGr0/DaqnFw69ks9Fj" # slappasswd -s readonlypassword

ldap_enable_tls: "yes"
ldap_tls_cert_path: /opt/bitnami/openldap/certs
ldap_tls_cert_file_name: openldap.crt
ldap_tls_key_file_name: openldap.key
ldap_tls_ca_file_name: openldapCA.crt
ldap_tls_cert_host_path: /tmp/openldap/certs

ldap_mdb_olcAccess:
  - >-
    {0}to *
    by dn.exact=gidNumber=0+uidNumber=0,cn=peercred,cn=external,cn=auth manage
    by * break
  - >-
    {1}to attrs=userPassword,shadowLastChange
    by self write
    by dn="cn={{ ldap_admin_username }},{{ ldap_root }}" write
    by anonymous auth
    by * none
  - >-
    {2}to *
    by self read
    by dn="cn={{ ldap_admin_username }},{{ ldap_root }}" write
    by dn="cn={{ ldap_readonly_username }},{{ ldap_root }}" read
    by * none

ldap_olcmoduleload:
  - memberof.so
  - ppolicy.so

ldap_ppolicies:
  - name: default
    policies: &def_policies
      # pwdCheckModule: pwcheck.la    #Название пользовательского модуля проверки качества пароля
      pwdMaxAge: 31536000           #Время действия пароля в с (год)
      pwdExpireWarning: 2592000     #Предупреждение об устаревании в с (за 30 дней)
      pwdInHistory: 10              #Количество паролей, хранимых для ограничения повторов (было у нас - 400, кажется излишним)
      pwdCheckQuality: 1            #0(def) - нет проверок качества пароля, 1 - проверяет если может, пропускает если не может проверить, 2 - если не может проверить, не пропускает
      pwdMaxFailure: 3              #Если больше 0, определяет количество попыток ввода неверного пароля
      pwdLockout: "TRUE"            #TRUE - блокирует при неверных паролях, FALSE - не делает ничего
      pwdLockoutDuration: 5         #Блокировка на указанное количество с, 0(def) - до разблокировки админом (5 секунд)
      pwdGraceAuthNLimit: 2         #Период отложенной блокировки при устаревании пароля. 0(def) - пароль устаревает мгновенно по достижении срока устаревания
      pwdFailureCountInterval: 0    #Сброс счетчика неудачных вводов пароля в с. 0(def) - только при удачном вводе
      pwdMustChange: "FALSE"        #Необходимость пользователю сменить пароль при разблокировке учетки. FALSE(def) - менять пароль не обязательно
      pwdMinLength: 16              #Минимальное количество символов в пароле
      pwdAllowUserChange: "TRUE"    #Разрешено ли пользователям менять свои пароли. TRUE(def) - разрешено
      pwdSafeModify: "TRUE"         #Нужно ли пользователю отправлять свой старый пароль при его смене. FALSE(def) - не нужно
      pwdMinAge: 0                  #Минимальное временем (в с) между сменами пароля.
  - name: reader
    policies:
      <<: *def_policies
      pwdMaxAge: 0
      pwdExpireWarning: 0

ldap_add_modules: true

ldap_server_packages:
  - python3
  - ldap-utils
  # These are needed to be able to install python-ldap
  - python3-pip
  - libsasl2-dev
  - python3-dev
  - libldap2-dev
ldap_pip_requirements:
  - docker-compose
  - python-ldap

ldap_groups_list: []

ldap_users_list: []

ldap_unblock_users_list: []

ldap_search_attrs:
  - uid
  - mail
  - displayName
  - gidNumber
# example for all attributes:
# ldap_search_attrs: []

ldap_client_packages:
  - nslcd
  - ldap-utils

ldap_server_list:
  - ldapserver.example.com

ldap_passwd_filter: "(objectClass=posixAccount)"
